name: CI

on:
  pull_request:
   types: [opened, synchronize, reopened]

jobs:
  rust_lint:
    strategy:
      fail-fast: true
      matrix:
        include:
          - rust_version: "stable"
          - rust_version: "nightly"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust ${{ matrix.rust_version }}
      uses: actions-rs/toolchain@v1
      with:
          toolchain: ${{ matrix.rust_version }}
          override: true
          components: rustfmt, clippy

    - name: Check fmt
      if: matrix.rust_version == 'stable'
      run: cargo fmt -- --check

    - name: Check clippy
      if: matrix.rust_version == 'nightly'
      run: cargo clippy -- -D warnings

  rust_unit:
    strategy:
      fail-fast: true
      matrix:
        include:
          - rust_version: "stable"
          - rust_version: "nightly"
          - rust_version: "beta"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust ${{ matrix.rust_version }}
      uses: actions-rs/toolchain@v1
      with:
          toolchain: ${{ matrix.rust_version }}
          override: true

    - name: Unit test
      run: cargo test -- --show-output

  py_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install pylint
        run: pip3 install pylint pytest
      - name: Run test
        run: pylint --errors-only src/python/rabc/ tests/integration/

  c_memory_leak_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
      - name: Install gcc make valgrind
        run: sudo apt-get install -y gcc make valgrind
      - name: Run test
        run: make clib_check

  integ:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - container_image: "c8s-rabc-ci"
          - container_image: "c9s-rabc-ci"
    steps:
      - uses: actions/checkout@v3

      - name: Install gcc make valgrind
        run: sudo apt-get install -y gcc make valgrind

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true

      - name: Run tests
        run: .github/runtest.sh ${{ matrix.container_image }}

      - name: Set artifacts permissions
        if: ${{ failure() }}
        run: sudo chmod 777 -Rv test_artifacts

      - uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: nmstate-test-artifact-${{ matrix.container_image }}
          path: test_artifacts/
          retention-days: 5

